version: 2.1


orbs:
  browser-tools: circleci/browser-tools@1.4.0


jobs:
  build:
    docker:
      - image: emscripten/emsdk:3.1.26
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - opencv-cache-{{ arch }}-{{ .Branch }}-{{ checksum ".git/modules/opencv/HEAD" }}
      - run:
          name: Build with emscripten
          command: |
            emcmake cmake . -B build
            cmake --build build
      - save_cache:
          key: opencv-cache-{{ arch }}-{{ .Branch }}-{{ checksum ".git/modules/opencv/HEAD" }}
          paths:
            - build/opencv-build
            - build/opencv-install
            - build/opencv-prefix
      - persist_to_workspace:
          root: .
          paths:
           - build/web
      - store_artifacts:
          path: build/web
  test:
    docker:
      - image: cimg/python:3.9-browsers
    steps:
      - browser-tools/install-browser-tools
      - browser-tools/install-firefox
      - browser-tools/install-geckodriver
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Download Selenium
          command: |
            curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      - run:
          name: Start Selenium
          command: |
            java -jar selenium-server-standalone-3.5.3.jar -log tests/selenium.log
          background: true
      - run:
          name: Run webapp
          command: |
            python -m http.server 6931 --directory build/web
          background: true
      - restore_cache:
          key: test-deps-{{ .Branch }}-{{ checksum "tests/requirements.txt" }}
      - run:
          name: Install Python deps in a venv
          working_directory: tests
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: test-deps-{{ .Branch }}-{{ checksum "tests/requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Run tests
          working_directory: tests
          command: |
            . venv/bin/activate
            ./wait-for-selenium.sh pytest -s --html=report.html --self-contained-html
      - store_artifacts:
          path: tests/report.html
      - store_artifacts:
          path: tests/selenium.log
  deploy:
    docker:
      - image: cimg/base:2022.12
    steps:
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "d5:c1:2f:40:5f:1f:cf:99:12:a6:d3:7a:0f:09:94:49"
      - run:
          name: Deploy to github pages
          working_directory: build/web
          command: |
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git init --quiet
            git config user.name "CircleCI"
            git config user.email "${CIRCLE_PROJECT_USERNAME}@users.noreply.github.com"
            git add -A
            git commit -m "[ciskip] deploy ${CIRCLE_SHA1}"
            git push --force $CIRCLE_REPOSITORY_URL master:gh-pages


workflows:
  main:
    jobs:
      - build:
          filters:
            branches:
              ignore: gh-pages
      - test:
          requires:
            - build
      - hold:
          type: approval
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - hold
